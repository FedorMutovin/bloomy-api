env:
  POSTGRESQL_USERNAME: postgres
  POSTGRESQL_PASSWORD: postgres
  POSTGRES_DB: postgres

name: Rails tests
on:
  push:
    branches:
      - master

jobs:
  rspec-test:
    name: Rspec
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        env:
          POSTGRES_USER: ${{ env.POSTGRESQL_USERNAME }}
          POSTGRES_PASSWORD: ${{ env.POSTGRESQL_PASSWORD }}
    steps:
      - uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt-get -yqq install libpq-dev build-essential libcurl4-openssl-dev
      - name: Setup Database
        run: |
          cp config/database.yml.github-actions config/database.yml
          bundler exec rails db:create
          bundle exec rake db:schema:load
        env:
          RAILS_ENV: test
          POSTGRES_USER: ${{ env.POSTGRESQL_USERNAME }}
          POSTGRES_PASSWORD: ${{ env.POSTGRESQL_PASSWORD }}
          RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
      - name: Run tests
        run: COVERAGE=true bundle exec rspec --tag passing --require rails_helper
        env:
          RAILS_ENV: test
          POSTGRES_USER: ${{ env.POSTGRESQL_USERNAME }}
          POSTGRES_PASSWORD: ${{ env.POSTGRESQL_PASSWORD }}
          RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
      - name: Upload coverage results
        uses: actions/upload-artifact@master
        if: always()
        with:
          name: coverage report
          path: coverage
  rubocop-test:
    name: Rubocop
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - name: Check Rubocop offenses
        run: bundle exec rubocop
  brakeman:
    name: runner / brakeman
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.0.0
      - name: brakeman
        uses: reviewdog/action-brakeman@v2
        with:
          brakeman_version: 5.4.0
          reporter: github-pr-review # Default is github-pr-check