name: Rails CI
on:
  push:
    branches:
      - '**'

env:
  POSTGRESQL_USERNAME: postgres
  POSTGRESQL_PASSWORD: postgres
  POSTGRES_DB: postgres

jobs:
  rspec-test:
    name: Rspec
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        env:
          POSTGRES_USER: ${{ env.POSTGRESQL_USERNAME }}
          POSTGRES_PASSWORD: ${{ env.POSTGRESQL_PASSWORD }}

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: ~/docker_cache
          key: ${{ runner.os }}-docker-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Build Docker image (development)
        uses: docker/build-push-action@v4
        with:
          context: .
          file: .dockerdev/Dockerfile
          target: development
          tags: bloomy-api-ci:latest
          cache-from: type=local,src=~/docker_cache
          cache-to: type=local,dest=~/docker_cache,mode=max
          build-args: |
            RUBY_VERSION: '3.3.5'
            PG_MAJOR: '16'

      - name: Run tests in Docker
        run: |
          docker run -d --name bloomy-api-container \
            -e POSTGRES_USER=${{ env.POSTGRESQL_USERNAME }} \
            -e POSTGRES_PASSWORD=${{ env.POSTGRESQL_PASSWORD }} \
            -e RAILS_ENV=test \
            -e RAILS_MASTER_KEY=${{ secrets.RAILS_MASTER_KEY }} \
            --network host \
            bloomy-api-ci:latest tail -f /dev/null

          docker exec bloomy-api-container bash -c "
            cp config/database.yml.github-actions config/database.yml &&
            bundle install &&
            bundle exec rails db:create db:schema:load &&
            COVERAGE=true bundle exec rspec --tag passing --require rails_helper
          "

      - name: Upload coverage results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: coverage report
          path: coverage

  rubocop-test:
    name: Rubocop
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: ~/docker_cache
          key: ${{ runner.os }}-docker-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Build Docker image (development)
        uses: docker/build-push-action@v4
        with:
          context: .
          file: .dockerdev/Dockerfile
          target: development
          tags: bloomy-api-ci:latest
          cache-from: type=local,src=~/docker_cache
          cache-to: type=local,dest=~/docker_cache,mode=max

      - name: Run Rubocop
        run: |
          docker run bloomy-api-ci:latest bash -c "
            bundle install &&
            bundle exec rubocop
          "

  brakeman:
    name: Brakeman
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: ~/docker_cache
          key: ${{ runner.os }}-docker-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Build Docker image (development)
        uses: docker/build-push-action@v4
        with:
          context: .
          file: .dockerdev/Dockerfile
          target: development
          tags: bloomy-api-ci:latest
          cache-from: type=local,src=~/docker_cache
          cache-to: type=local,dest=~/docker_cache,mode=max

      - name: Run Brakeman
        run: |
          docker run bloomy-api-ci:latest bash -c "
            bundle install &&
            bin/brakeman
          "